version: '3.6'

x-dor-indexing: &dor-indexing-backend
  image: suldlss/dor-indexing-app:latest
  environment:
    SOLR_URL: http://solr:8983/solr/argo
    SETTINGS__SOLR__URL: http://solr:8983/solr/argo
    SETTINGS__DOR_SERVICES__URL: http://dor-services-app:3000/
    # To generate the token: docker-compose run dor-services-app rake generate_token
    SETTINGS__DOR_SERVICES__TOKEN: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJGb28ifQ.-BVfLTW9Q1_ZQEsGv4tuzGLs5rESN7LgdtEwUltnKv4
    SETTINGS__SOLRIZER_URL: http://solr:8983/solr/argo
    SETTINGS__WORKFLOW_URL: http://workflow:3000
    SETTINGS__RABBITMQ__HOSTNAME: rabbitmq
    WORKERS: ReindexJob,ReindexByDruidJob,DeleteByDruidJob
  depends_on:
    - solr
    - workflow
    - rabbitmq

services:
  web:
    build: .
    volumes:
      - ./:/app
      - node_modules:/app/node_modules
    working_dir: /app
    ports:
      - 3000:3000
    environment:
      NODE_ENV: development
      RAILS_LOG_TO_STDOUT: 'true'
      REMOTE_USER: blalbrit@stanford.edu
      ROLES: sdr:administrator-role;sdr:service-manager
      # Allow bulk action logs to be written (can't write to /tmp)
      SETTINGS__BULK_METADATA__DIRECTORY: '/app/tmp'
      SETTINGS__BULK_METADATA__TEMPORARY_DIRECTORY: '/app/tmp/tmp'
      SETTINGS__DOR_INDEXING_URL: http://dor-indexing-app:3000/dor
      # To generate the token: docker-compose run dor-services-app rake generate_token
      SETTINGS__DOR_SERVICES__TOKEN: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJGb28ifQ.-BVfLTW9Q1_ZQEsGv4tuzGLs5rESN7LgdtEwUltnKv4
      SETTINGS__DOR_SERVICES__URL: http://dor-services-app:3000
      SETTINGS__REDIS_URL: redis://redis:6379/
      SETTINGS__SOLRIZER_URL: http://solr:8983/solr/argo
      SETTINGS__WORKFLOW_URL: http://workflow:3000
      SETTINGS__TECH_MD_SERVICE__URL: http://techmd:3000
      SETTINGS__VERSION_SERVICE__SYNC_WITH_PRESERVATION: false
      SOLR_URL: http://solr:8983/solr/argo
      # Docker doesn't allow rails server to remove PID on shutdown
      PID_FILE: /dev/null
    depends_on:
      - dor-indexing-app
    # To allow yarn --watch from Procfile.dev to continue after stdin is closed
    tty: true

  rabbitmq:
    image: rabbitmq:3
    ports:
      - 5672:5672

  dor-indexing-app:
    <<: *dor-indexing-backend
    ports:
      - 3004:3000

  dor-indexing-workers:
    <<: *dor-indexing-backend
    command: ['sh', '-c', 'timeout 30 docker/wait-port.sh rabbitmq 5672 ; bin/rake rabbitmq:setup sneakers:run']
  dor-services-app:
    image: suldlss/dor-services-app:latest
    ports:
      - 3003:3000
    environment:
      DATABASE_NAME: dor-services-app
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: sekret
      DATABASE_HOSTNAME: db
      DATABASE_PORT: 5432
      RAILS_LOG_TO_STDOUT: 'true'
      SECRET_KEY_BASE: 769171f88c527d564fb65b4b7ef712d5ae9761a21e26a41cd7c88eb0af89c74f857b9be4089119f71cf806dfc8bf9d9d2f0df91c00b119c96f462b46ebf43b0f
      SOLR_URL: http://solr:8983/solr/argo
      SETTINGS__ENABLED_FEATURES__CREATE_UR_ADMIN_POLICY: 'true'
      SETTINGS__DOR_INDEXING__URL: http://dor-indexing-app:3000/dor
      SETTINGS__SOLR__URL: http://solr:8983/solr/argo
      SETTINGS__SURI__URL: http://suri:3000
      SETTINGS__WORKFLOW_URL: http://workflow:3000
      SETTINGS__WORKFLOW__LOGFILE: rails
      SETTINGS__RABBITMQ__ENABLED: 'true'
      SETTINGS__RABBITMQ__HOSTNAME: rabbitmq
      SETTINGS__VERSION_SERVICE__SYNC_WITH_PRESERVATION: 'false'
      REDIS_URL: redis://redis:6379/
    depends_on:
      - db
      - dor-indexing-app
      - suri
      - redis

  sdr-api:
    image: suldlss/sdr-api:latest
    ports:
      - 3006:3000
    environment:
      DATABASE_NAME: sdr
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: sekret
      DATABASE_HOSTNAME: db
      DATABASE_PORT: 5432
      RAILS_LOG_TO_STDOUT: 'true'
      USER_EMAIL: argo@dlss.sul.stanford.edu
      USER_PASSWORD: notusedanywhere
      SECRET_KEY_BASE: 769171f88c527d564fb65b4b7ef712d5ae9761a21e26a41cd7c88eb0af89c74f857b9be4089119f71cf806dfc8bf9d9d2f0df91c00b119c96f462b46ebf43b0f
      SETTINGS__WORKFLOW__URL: http://workflow:3000
      SETTINGS__DOR_SERVICES__URL: http://dor-services-app:3000/
      # To generate the token: docker-compose run dor-services-app rake generate_token
      SETTINGS__DOR_SERVICES__TOKEN: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJGb28ifQ.-BVfLTW9Q1_ZQEsGv4tuzGLs5rESN7LgdtEwUltnKv4
    depends_on:
      - db
      - dor-services-app

  solr:
    image: solr:8.11.2
    volumes:
      - ./solr_conf/conf/:/myconfig
    command: solr-create -c argo -d /myconfig
    ports:
      - 8983:8983

  suri:
    image: suldlss/suri-rails:latest
    ports:
      - 3002:3000
    depends_on:
      - db
    environment:
      DATABASE_NAME: suri
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: sekret
      DATABASE_HOSTNAME: db
      DATABASE_PORT: 5432
      RAILS_LOG_TO_STDOUT: 'true'

  db:
    image: postgres:11 # aligns the pg version with what is supported by dor-services-app
    environment:
      - POSTGRES_PASSWORD=sekret
    volumes:
      - postgres-data:/var/lib/postgresql/data

  workflow:
    image: suldlss/workflow-server:latest
    environment:
      - RAILS_LOG_TO_STDOUT=true
      - DATABASE_NAME=workflow-server
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=sekret
      - DATABASE_HOSTNAME=db
      - DATABASE_PORT=5432
      - SETTINGS__DOR_SERVICES__URL=http://dor-services-app:3000
      - SETTINGS__DOR_SERVICES__TOKEN=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJGb28ifQ.-BVfLTW9Q1_ZQEsGv4tuzGLs5rESN7LgdtEwUltnKv4
      - SETTINGS__ENABLE_STOMP=false
      - SETTINGS__REDIS__HOSTNAME=redis
      - PAGER='more'
    depends_on:
      - db
      - redis
    ports:
      - 3001:3000

  techmd:
    image: suldlss/technical-metadata-service:latest
    environment:
      DATABASE_NAME: technical_metadata
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: sekret
      DATABASE_HOSTNAME: db
      DATABASE_PORT: 5432
      RAILS_LOG_TO_STDOUT: "true"
      REDIS_URL: redis://redis:6379/
    ports:
      - 3005:3000
    depends_on:
      - db
      - redis

  redis:
    image: redis
    ports:
     - 6379:6379

volumes:
  node_modules:
  postgres-data:
